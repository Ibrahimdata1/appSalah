import { useState } from "react";
import { View, Text, TextInput, Button, Alert } from "react-native";
import * as Location from "expo-location";
import AsyncStorage from "@react-native-async-storage/async-storage";

export default function PostJob() {
  const [jobTitle, setJobTitle] = useState("");
  const [company, setCompany] = useState("");
  const [salary, setSalary] = useState("");
  const [description, setDescription] = useState("");
  const [location, setLocation] = useState(null);

  const getLocation = async () => {
    let { status } = await Location.requestForegroundPermissionsAsync();
    if (status !== "granted") {
      Alert.alert("Permission denied", "Allow location access to continue");
      return;
    }
    let currentLocation = await Location.getCurrentPositionAsync({});
    setLocation(currentLocation.coords);
  };

  const postJob = async () => {
    if (!jobTitle || !company || !salary || !location || !description) {
      Alert.alert(
        "‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö!",
        "‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠ ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏û‡∏¥‡∏Å‡∏±‡∏î"
      );
      return;
    }

    const newJob = {
      id: Date.now(),
      title: jobTitle,
      company,
      salary,
      description,
      lat: location.latitude,
      lng: location.longitude,
    };

    let storedJobs = await AsyncStorage.getItem("jobs");
    let jobs = storedJobs ? JSON.parse(storedJobs) : [];
    jobs.push(newJob);

    await AsyncStorage.setItem("jobs", JSON.stringify(jobs));

    Alert.alert(
      "‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
      `‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: ${jobTitle}\n‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó: ${company}\n‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô: ${salary}`
    );
    setJobTitle("");
    setCompany("");
    setSalary("");
    setDescription("");
    setLocation(null);
  };

  return (
    <View className="p-4">
      <Text className="text-xl font-bold">‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà</Text>

      <TextInput
        style={{
          borderWidth: 1,
          padding: 8,
          marginTop: 8,
          borderColor: "#000",
        }}
        placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏á‡∏≤‡∏ô"
        value={jobTitle}
        onChangeText={setJobTitle}
      />
      <TextInput
        style={{
          borderWidth: 1,
          padding: 8,
          marginTop: 8,
          borderColor: "#000",
        }}
        placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó"
        value={company}
        onChangeText={setCompany}
      />
      <TextInput
        style={{
          borderWidth: 1,
          padding: 8,
          marginTop: 8,
          borderColor: "#000",
        }}
        placeholder="‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô"
        value={salary}
        onChangeText={setSalary}
      />
      <TextInput
        style={{
          borderWidth: 1,
          padding: 8,
          marginTop: 8,
          borderColor: "#000",
        }}
        multiline
        placeholder="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô"
        value={description}
        onChangeText={setDescription}
      />

      <Button title="‡πÉ‡∏ä‡πâ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á GPS ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô" onPress={getLocation} />
      {location && (
        <Text className="text-green-500 mt-2">‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß! üìç</Text>
      )}

      <Button title="‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏á‡∏≤‡∏ô" onPress={postJob} />
    </View>
  );
}
